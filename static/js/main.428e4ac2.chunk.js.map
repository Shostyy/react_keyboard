{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKeyPressed","handleListener","event","key","setState","window","addEventListener","this","removeEventListener","className","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,eAAgB,IAFpB,EAaEC,eAAiB,SAACC,GAChB,IAAQC,EAAQD,EAARC,IAER,EAAKC,SAAS,CAAEJ,eAAgBG,KAhBpC,uDAKE,WACEE,OAAOC,iBAAiB,UAAWC,KAAKN,kBAN5C,kCASE,WACEI,OAAOG,oBAAoB,UAAWD,KAAKN,kBAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACyC,IAArCF,KAAKR,MAAMC,eAAeU,OAC1B,0BADA,mCAG4BH,KAAKR,MAAMC,eAHvC,aAvBZ,GAAyBW,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.428e4ac2.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    lastKeyPressed: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleListener);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleListener);\n  }\n\n  handleListener = (event: KeyboardEvent) => {\n    const { key } = event;\n\n    this.setState({ lastKeyPressed: key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { this.state.lastKeyPressed.length === 0 ? (\n            'Nothing was pressed yet'\n          ) : (\n            `The last pressed key is [${this.state.lastKeyPressed}]`\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}